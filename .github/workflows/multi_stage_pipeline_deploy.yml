name: Deploy Fabric Items (Multi-Stage)

on:
  push:
    branches:
      - master
    paths:
      - 'fabric_items/**'
  workflow_dispatch:
    inputs:
      deploy_whl:
        description: 'Do you want to deploy the wheel file?'
        required: true
        default: 'no'
        type: choice
        options:
          - yes
          - no

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev   # "Environments"

    env:
      TARGET_ENVIRONMENT: dev
      WORKSPACE_ID: ${{ secrets.WORKSPACE_ID_DEV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .cicd/requirements.txt

      - name: Azure CLI login (device code)
        run: az login --use-device-code

      - name: Get Fabric access token
        id: fabric_token
        run: |
          TOKEN=$(az account get-access-token --resource https://api.fabric.microsoft.com --query accessToken -o tsv)
          echo "FABRIC_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Deploy to Dev (Variable Group etc.)
        run: |
          echo "Deploying to DEV..."
          python .cicd/set_variable_group.py "$TARGET_ENVIRONMENT" "$FABRIC_TOKEN"

      - name: Deploy to Dev (Custom environment)
        run: |
          if [[ "${{ github.event.inputs.deploy_whl }}" == "true" ]]; then
            echo "Deploying wheel file..."
            # python .cicd/create_custom_envs.py --overwrite_whl yes --token "$FABRIC_TOKEN"
            python .cicd/create_custom_envs.py --overwrite_whl ${{ github.event.inputs.deploy_whl }} --token "$FABRIC_TOKEN" --workspace_id "$WORKSPACE_ID_DEV"
            

          else
            echo "Skipping wheel file deployment..."
            # python .cicd/create_custom_envs.py --overwrite_whl no --token "$FABRIC_TOKEN"
            python .cicd/create_custom_envs.py --overwrite_whl ${{ github.event.inputs.deploy_whl }} --token "$FABRIC_TOKEN" --workspace_id "$WORKSPACE_ID_DEV"
          fi

      - name: Create Deployment Pipeline (in dev)
        run: |
          echo "Creating deployment pipeline in DEV environment (hardcoded)..."
          python .cicd/deployment_pipeline.py "$FABRIC_TOKEN"

  # deploy-test:
  #   # if: github.event.inputs.environment == 'test'
  #   name: Deploy to Test
  #   runs-on: ubuntu-latest
  #   needs: deploy-dev   # run only after dev succeeds
  #   environment: test   # this requires approval

  #   env:
  #     TARGET_ENVIRONMENT: test

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1

  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.11

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r .cicd/requirements.txt

  #     - name: Azure CLI login (device code)
  #       run: az login --use-device-code

  #     - name: Get Fabric access token
  #       id: fabric_token
  #       run: |
  #         TOKEN=$(az account get-access-token --resource https://api.fabric.microsoft.com --query accessToken -o tsv)
  #         echo "FABRIC_TOKEN=$TOKEN" >> $GITHUB_ENV

  #     - name: Deploy to Test (Variable Group etc.)
  #       run: |
  #         echo "Deploying to TEST..."
  #         python .cicd/set_variable_group.py "$TARGET_ENVIRONMENT" "$FABRIC_TOKEN"
